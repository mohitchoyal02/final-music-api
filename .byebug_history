c
@current_user
params[:id]
playlist
n
c
playlist.save
playlist.vaild?
playlist.songs
n
playlist.save
playlist.valid?
playlist
n
c
playlist.valid?
playlist.songs.length
playlist.songs.count
playlist.songs
playlist.songs << songs
songs
playlist.songs
playlist
Playlist.count
Playlist.all
playlist
n
c
playlist.errors[:songs]
playlist.errors
playlist.valid?
playlist.save
playlist.save4
playlist.songs
n
playlist.songs
playlist
n
c
playlist.save
n
playlist.save
n
playlist
n
c
playlist.save
playlist.songs
n
playlist.songs
playlist
n
c
n
playlist.songs
n
playlist.songs
playlist
n
c
s
n
c
n
c
p.errors[:songs]
p.errors
p.valid?
p.valid>?
p.songs
p
p.save
p.songs
p.songs = songs
p.songs
p
songs.count
songs
songs = Song.where(id: params[:songs])
p.songs
p.songs=params[:songs]
params[:songs]
p.songs
p
p.songs=params[:songs]
p.songs
p = Playlist.new(title: "test", listner_id: 8)
songs = Song.where(id: params[:songs])
params[:songs]
c
playlist
playlist.songs
n
playlist.songs
playlist
n
songs
n
c
n
playlist.songs
playlist.songs<<songs
playlist.songs
playlist
n
songs
n
c
user.save!
c
user.save!
user
c
n
album
n
album
n
c
n
playlist.song_ids
n
playlist.song_ids
playlist
n
params[:songs]
c
n
list.song.artists
list.song.artist
list.song
list =  list.first
p list
c
l.song.artist
l.song
l.songs
p l
l
p h
n
p h
h
n
list
result
l
c
n
c
song
n
params[:file]
 n
c
Artist.first.songs.find_by(id: 3)
Artist.first.songs.find(3)
Artist.first
Artist.first.songs
params[:id]
song
n
c
song.file.attach( p)
song.file.attach = p
song.file.attached?
song.file
song
p = params[:file]
params[:file]
song
n
bn
c
n
decoded
n
c
decoded
n
decoded
header
n
c
n
c
n
